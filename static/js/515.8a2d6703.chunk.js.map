{"version":3,"file":"static/js/515.8a2d6703.chunk.js","mappings":"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","sources":["api/movies-api.js","Icons/starIcon.svg","components/MovieCard.styled.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst KEY = 'a81f67cfcb4d5e6663d9f2cbb7c2c958';\n\nasync function getTrending() {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/movie/day?language=en-US`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getMovieById(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?language=en-US`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getMovieByName(query) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getMovieCast(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?language=en-US`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nasync function getMovieReviews(id) {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?language=en-US&page=1`,\n      {\n        params: {\n          api_key: KEY,\n        },\n      }\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMovieByName,\n  getMovieCast,\n  getMovieReviews,\n};\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStarIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"icon-star-full\",\n    viewBox: \"0 0 32 32\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 12.408l-11.056-1.607-4.944-10.018-4.944 10.018-11.056 1.607 8 7.798-1.889 11.011 9.889-5.199 9.889 5.199-1.889-11.011 8-7.798z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStarIcon);\nexport default __webpack_public_path__ + \"static/media/starIcon.a0793e2d4f413c749bc40260e54430be.svg\";\nexport { ForwardRef as ReactComponent };","import styled from '@emotion/styled';\n\nexport const MovieCard = styled.div`\n  display: flex;\n  gap: 50px;\n`;\n\nexport const GenresList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 7px;\n`;\n\nexport const Genre = styled.li`\n  margin-left: 10px;\n`;\n\nexport const Overview = styled.p`\n  margin-left: 10px;\n`;\n\nexport const Rating = styled.p`\n  margin-left: 10px;\n`;\n","import { useState, useEffect, useRef, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport * as api from '../api/movies-api.js';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { Spinner } from 'components/Loader/Loader.jsx';\nimport { ReactComponent as StarIcon } from '../Icons/starIcon.svg';\nimport {\n  MovieCard,\n  GenresList,\n  Genre,\n  Overview,\n  Rating,\n} from 'components/MovieCard.styled.jsx';\n\nfunction MovieDetails() {\n  const { movieId } = useParams([]);\n\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    async function getMoviesById(id) {\n      setLoading(true);\n      try {\n        const res = await api.getMovieById(id);\n        setMovie(res.data);\n      } catch (error) {\n        toast.error('Something went wrong, try again.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMoviesById(movieId);\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLink.current}>Go back</Link>\n      {!movie && loading && <Spinner />}\n      {movie && (\n        <div>\n          <MovieCard>\n            <div>\n              <img\n                src={\n                  movie.poster_path &&\n                  `http://image.tmdb.org/t/p/w300/${movie.poster_path}`\n                }\n                alt={movie.original_title}\n              />\n            </div>\n            <div>\n              <h1>{movie.original_title}</h1>\n              <Rating>\n                Rating: {movie.vote_average.toFixed(1)}{' '}\n                <StarIcon width={17} fill=\"#cdf12d\" stroke=\"black\" />\n              </Rating>\n              <h2>Overview</h2>\n              <Overview>{movie.overview}</Overview>\n              <h3>Genres:</h3>\n              <GenresList>\n                {movie.genres?.map(({ name }) => (\n                  <Genre key={name}>{name};</Genre>\n                ))}\n              </GenresList>\n            </div>\n          </MovieCard>\n          <ul>\n            <li>\n              <Link to={'cast'}>cast</Link>\n            </li>\n            <li>\n              <Link to={'reviews'}>reviews</Link>\n            </li>\n          </ul>\n          <Suspense fallback={<Spinner />}>\n            <Outlet />\n          </Suspense>\n        </div>\n      )}\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["KEY","getTrending","axios","params","api_key","response","data","results","console","log","getMovieById","id","getMovieByName","query","getMovieCast","getMovieReviews","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgStarIcon","_ref","svgRef","title","titleId","props","viewBox","ref","d","ForwardRef","MovieCard","styled","GenresList","Genre","Overview","Rating","movieId","useParams","location","useLocation","backLink","useRef","state","from","useState","movie","setMovie","loading","setLoading","useEffect","api","res","toast","getMoviesById","to","current","src","poster_path","alt","original_title","vote_average","toFixed","width","fill","stroke","overview","genres","map","name","Suspense","fallback"],"sourceRoot":""}